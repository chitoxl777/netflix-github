{"ast":null,"code":"var _jsxFileName = \"/Users/chitoxl777/Desktop/Github-Search/github-test/src/Repos.js\";\nimport React from \"react\";\nimport \"./Repos.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Repos(props) {\n  //   console.log(props.repos);\n\n  const displayRepos = props => {\n    const {\n      repos\n    } = props;\n    console.log(repos);\n    if (repos.length > 0) {\n      return repos.map(repo => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App d-flex\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"18rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: repo.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: repo.language\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 24,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: repo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Star Count: \", repo.stargazers_count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Fork Count: \", repo.forks_count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Date Created: \", repo.created_at]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                children: \"Go somewhere\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this)\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Repos yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return displayRepos(props);\n}\n_c = Repos;\nvar _c;\n$RefreshReg$(_c, \"Repos\");","map":{"version":3,"names":["React","Button","Card","Repos","props","displayRepos","repos","console","log","length","map","repo","width","name","language","description","stargazers_count","forks_count","created_at","id"],"sources":["/Users/chitoxl777/Desktop/Github-Search/github-test/src/Repos.js"],"sourcesContent":["import React from \"react\";\nimport \"./Repos.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default function Repos(props) {\n  //   console.log(props.repos);\n\n  const displayRepos = (props) => {\n    const { repos } = props;\n    console.log(repos);\n    if (repos.length > 0) {\n      return repos.map((repo) => {\n        return (\n          <div className=\"App d-flex\" key={repo.id}>\n            <Card style={{ width: \"18rem\" }}>\n              {/* <Card.Img variant=\"top\" src=\"img/logo192.png\" /> */}\n              <Card.Body>\n                <Card.Title>\n                  <h1>{repo.name}</h1>\n                </Card.Title>\n                <Card.Text>\n                  <b>\n                    <i>{repo.language}</i>\n                  </b>\n                </Card.Text>\n                <Card.Text>{repo.description}</Card.Text>\n                <Card.Text>Star Count: {repo.stargazers_count}</Card.Text>\n                <Card.Text>Fork Count: {repo.forks_count}</Card.Text>\n                <Card.Text>Date Created: {repo.created_at}</Card.Text>\n                <Button variant=\"primary\">Go somewhere</Button>\n              </Card.Body>\n            </Card>\n          </div>\n        );\n      });\n    } else {\n      return <h3>No Repos yet</h3>;\n    }\n  };\n\n  return displayRepos(props);\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC;AAExC,eAAe,SAASC,KAAK,CAACC,KAAK,EAAE;EACnC;;EAEA,MAAMC,YAAY,GAAID,KAAK,IAAK;IAC9B,MAAM;MAAEE;IAAM,CAAC,GAAGF,KAAK;IACvBG,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,IAAIA,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MACpB,OAAOH,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;QACzB,oBACE;UAAK,SAAS,EAAC,YAAY;UAAA,uBACzB,QAAC,IAAI;YAAC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAQ,CAAE;YAAA,uBAE9B,QAAC,IAAI,CAAC,IAAI;cAAA,wBACR,QAAC,IAAI,CAAC,KAAK;gBAAA,uBACT;kBAAA,UAAKD,IAAI,CAACE;gBAAI;kBAAA;kBAAA;kBAAA;gBAAA;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QACT,eACb,QAAC,IAAI,CAAC,IAAI;gBAAA,uBACR;kBAAA,uBACE;oBAAA,UAAIF,IAAI,CAACG;kBAAQ;oBAAA;oBAAA;oBAAA;kBAAA;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA;cACpB;gBAAA;gBAAA;gBAAA;cAAA,QACM,eACZ,QAAC,IAAI,CAAC,IAAI;gBAAA,UAAEH,IAAI,CAACI;cAAW;gBAAA;gBAAA;gBAAA;cAAA,QAAa,eACzC,QAAC,IAAI,CAAC,IAAI;gBAAA,WAAC,cAAY,EAACJ,IAAI,CAACK,gBAAgB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAa,eAC1D,QAAC,IAAI,CAAC,IAAI;gBAAA,WAAC,cAAY,EAACL,IAAI,CAACM,WAAW;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAa,eACrD,QAAC,IAAI,CAAC,IAAI;gBAAA,WAAC,gBAAc,EAACN,IAAI,CAACO,UAAU;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAa,eACtD,QAAC,MAAM;gBAAC,OAAO,EAAC,SAAS;gBAAA,UAAC;cAAY;gBAAA;gBAAA;gBAAA;cAAA,QAAS;YAAA;cAAA;cAAA;cAAA;YAAA;UACrC;YAAA;YAAA;YAAA;UAAA;QACP,GAlBwBP,IAAI,CAACQ,EAAE;UAAA;UAAA;UAAA;QAAA,QAmBlC;MAEV,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,oBAAO;QAAA,UAAI;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK;IAC9B;EACF,CAAC;EAED,OAAOd,YAAY,CAACD,KAAK,CAAC;AAC5B;AAAC,KArCuBD,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}