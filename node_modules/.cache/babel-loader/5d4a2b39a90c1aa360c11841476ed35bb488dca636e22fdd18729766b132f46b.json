{"ast":null,"code":"var _jsxFileName = \"/Users/chitoxl777/Desktop/Github-Search/github-test/src/pages/Commits.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Commits(props) {\n  _s();\n  // Using Params to grab data from react router\n  const params = useParams();\n  const name = params.id;\n  const [commits, setCommits] = useState(\"\");\n  const url = `https://api.github.com/repos/Netflix/${name}/commits`;\n  async function getRepoData() {\n    axios.get(`${url}`).then(res => {\n      // console.log(res);\n      const allCommits = res.data;\n      console.log(allCommits);\n      setCommits(allCommits);\n    }).catch(error => console.error(`Error: ${error}`));\n  }\n  useEffect(() => {\n    getRepoData();\n  }, []);\n  const displayCommits = () => {\n    if (commits.length > 0) {\n      return commits.map(commit => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repo-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"100%\",\n                height: \"auto\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: commit.commit.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 19\n                }, this), commit.committer === null ? /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: \"null\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: commit.committer.login\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: commit.sha\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: commit.commit.author.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, commit.sha, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  };\n  return displayCommits(commits);\n}\n_s(Commits, \"+NfuW+5YBQ7fUM0rXSmILHV5DpI=\", false, function () {\n  return [useParams];\n});\n_c = Commits;\nvar _c;\n$RefreshReg$(_c, \"Commits\");","map":{"version":3,"names":["React","useParams","useEffect","useState","axios","Card","Commits","props","params","name","id","commits","setCommits","url","getRepoData","get","then","res","allCommits","data","console","log","catch","error","displayCommits","length","map","commit","width","height","message","committer","login","sha","author","date"],"sources":["/Users/chitoxl777/Desktop/Github-Search/github-test/src/pages/Commits.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default function Commits(props) {\n  // Using Params to grab data from react router\n  const params = useParams();\n  const name = params.id;\n\n  const [commits, setCommits] = useState(\"\");\n\n  const url = `https://api.github.com/repos/Netflix/${name}/commits`;\n\n  async function getRepoData() {\n    axios\n      .get(`${url}`)\n      .then((res) => {\n        // console.log(res);\n        const allCommits = res.data;\n        console.log(allCommits);\n        setCommits(allCommits);\n      })\n      .catch((error) => console.error(`Error: ${error}`));\n  }\n\n  useEffect(() => {\n    getRepoData();\n  }, []);\n\n  const displayCommits = () => {\n    if (commits.length > 0) {\n      return commits.map((commit) => {\n        return (\n          <div className=\"repo-card\" key={commit.sha}>\n            <div>\n              <Card style={{ width: \"100%\", height: \"auto\" }}>\n                <Card.Body>\n                  <Card.Title>\n                    <h1>{commit.commit.message}</h1>\n                  </Card.Title>\n                  {commit.committer === null ? (\n                    <Card.Text>null</Card.Text>\n                  ) : (\n                    <Card.Text>{commit.committer.login}</Card.Text>\n                  )}\n                  <Card.Text>{commit.sha}</Card.Text>\n                  <Card.Text>{commit.commit.author.date}</Card.Text>\n                </Card.Body>\n              </Card>\n            </div>\n          </div>\n        );\n      });\n    }\n  };\n\n  return displayCommits(commits);\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,sBAAsB;AAAC;AAExC,eAAe,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EACrC;EACA,MAAMC,MAAM,GAAGP,SAAS,EAAE;EAC1B,MAAMQ,IAAI,GAAGD,MAAM,CAACE,EAAE;EAEtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,GAAG,GAAI,wCAAuCJ,IAAK,UAAS;EAElE,eAAeK,WAAW,GAAG;IAC3BV,KAAK,CACFW,GAAG,CAAE,GAAEF,GAAI,EAAC,CAAC,CACbG,IAAI,CAAEC,GAAG,IAAK;MACb;MACA,MAAMC,UAAU,GAAGD,GAAG,CAACE,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;MACvBN,UAAU,CAACM,UAAU,CAAC;IACxB,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAE,UAASA,KAAM,EAAC,CAAC,CAAC;EACvD;EAEArB,SAAS,CAAC,MAAM;IACdY,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,cAAc,GAAG,MAAM;IAC3B,IAAIb,OAAO,CAACc,MAAM,GAAG,CAAC,EAAE;MACtB,OAAOd,OAAO,CAACe,GAAG,CAAEC,MAAM,IAAK;QAC7B,oBACE;UAAK,SAAS,EAAC,WAAW;UAAA,uBACxB;YAAA,uBACE,QAAC,IAAI;cAAC,KAAK,EAAE;gBAAEC,KAAK,EAAE,MAAM;gBAAEC,MAAM,EAAE;cAAO,CAAE;cAAA,uBAC7C,QAAC,IAAI,CAAC,IAAI;gBAAA,wBACR,QAAC,IAAI,CAAC,KAAK;kBAAA,uBACT;oBAAA,UAAKF,MAAM,CAACA,MAAM,CAACG;kBAAO;oBAAA;oBAAA;oBAAA;kBAAA;gBAAM;kBAAA;kBAAA;kBAAA;gBAAA,QACrB,EACZH,MAAM,CAACI,SAAS,KAAK,IAAI,gBACxB,QAAC,IAAI,CAAC,IAAI;kBAAA,UAAC;gBAAI;kBAAA;kBAAA;kBAAA;gBAAA,QAAY,gBAE3B,QAAC,IAAI,CAAC,IAAI;kBAAA,UAAEJ,MAAM,CAACI,SAAS,CAACC;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA,QACnC,eACD,QAAC,IAAI,CAAC,IAAI;kBAAA,UAAEL,MAAM,CAACM;gBAAG;kBAAA;kBAAA;kBAAA;gBAAA,QAAa,eACnC,QAAC,IAAI,CAAC,IAAI;kBAAA,UAAEN,MAAM,CAACA,MAAM,CAACO,MAAM,CAACC;gBAAI;kBAAA;kBAAA;kBAAA;gBAAA,QAAa;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACxC;cAAA;cAAA;cAAA;YAAA;UACP;YAAA;YAAA;YAAA;UAAA;QACH,GAhBwBR,MAAM,CAACM,GAAG;UAAA;UAAA;UAAA;QAAA,QAiBpC;MAEV,CAAC,CAAC;IACJ;EACF,CAAC;EAED,OAAOT,cAAc,CAACb,OAAO,CAAC;AAChC;AAAC,GArDuBL,OAAO;EAAA,QAEdL,SAAS;AAAA;AAAA,KAFFK,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}