{"ast":null,"code":"var _jsxFileName = \"/Users/chitoxl777/Desktop/Github-Search/github-test/src/pages/Commits.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect, React } from \"react\";\nimport axios from \"axios\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./Commits.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Commits(props) {\n  _s();\n  // Using Params to grab data from react router\n  const params = useParams();\n  const name = params.id;\n  const [commits, setCommits] = useState(\"\");\n  const url = `https://api.github.com/repos/Netflix/${name}/commits`;\n  async function getRepoData() {\n    axios.get(`${url}`).then(res => {\n      const allCommits = res.data;\n      console.log(allCommits);\n      setCommits(allCommits);\n    }).catch(error => console.error(`Error: ${error}`));\n  }\n  useEffect(() => {\n    getRepoData();\n  }, []);\n  const displayCommits = () => {\n    if (commits.length > 0) {\n      return commits.map(commit => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repo-card container-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"100%\",\n                height: \"auto\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: commit.commit.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pt-3\",\n                  id: \"grid\",\n                  children: [commit.committer === null ? /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: \"null\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: commit.committer.login\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: commit.sha\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: commit.commit.author.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, commit.sha, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-lg pb-3 d-flex flex-wrap flex-items-start my-3 flex-md-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Netflix Open Source Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), displayCommits(commits)]\n  }, void 0, true);\n}\n_s(Commits, \"+NfuW+5YBQ7fUM0rXSmILHV5DpI=\", false, function () {\n  return [useParams];\n});\n_c = Commits;\nvar _c;\n$RefreshReg$(_c, \"Commits\");","map":{"version":3,"names":["useParams","useState","useEffect","React","axios","Card","Commits","props","params","name","id","commits","setCommits","url","getRepoData","get","then","res","allCommits","data","console","log","catch","error","displayCommits","length","map","commit","width","height","message","committer","login","sha","author","date"],"sources":["/Users/chitoxl777/Desktop/Github-Search/github-test/src/pages/Commits.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect, React } from \"react\";\nimport axios from \"axios\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./Commits.css\";\n\nexport default function Commits(props) {\n  // Using Params to grab data from react router\n  const params = useParams();\n  const name = params.id;\n\n  const [commits, setCommits] = useState(\"\");\n\n  const url = `https://api.github.com/repos/Netflix/${name}/commits`;\n\n  async function getRepoData() {\n    axios\n      .get(`${url}`)\n      .then((res) => {\n        const allCommits = res.data;\n        console.log(allCommits);\n        setCommits(allCommits);\n      })\n      .catch((error) => console.error(`Error: ${error}`));\n  }\n\n  useEffect(() => {\n    getRepoData();\n  }, []);\n\n  const displayCommits = () => {\n    if (commits.length > 0) {\n      return commits.map((commit) => {\n        return (\n          <div className=\"repo-card container-lg\" key={commit.sha}>\n            <div>\n              <Card style={{ width: \"100%\", height: \"auto\" }}>\n                <Card.Body>\n                  <Card.Title>\n                    <h3>{commit.commit.message}</h3>\n                  </Card.Title>\n                  <div className=\"pt-3\" id=\"grid\">\n                    {commit.committer === null ? (\n                      <Card.Text>null</Card.Text>\n                    ) : (\n                      <Card.Text>{commit.committer.login}</Card.Text>\n                    )}\n                    <Card.Text>{commit.sha}</Card.Text>\n                    <Card.Text>{commit.commit.author.date}</Card.Text>\n                  </div>\n                </Card.Body>\n              </Card>\n            </div>\n          </div>\n        );\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container-lg pb-3 d-flex flex-wrap flex-items-start my-3 flex-md-items-center\">\n        <div className=\"flex-1\">\n          <h1>{name}</h1>\n          <p>Netflix Open Source Platform</p>\n        </div>\n      </div>\n      {displayCommits(commits)}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}