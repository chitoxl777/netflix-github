{"ast":null,"code":"var _jsxFileName = \"/Users/chitoxl777/Desktop/Github-Search/github-test/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Repos from \"./Repos\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [repos, setRepos] = useState([]);\n  const url = \"https://api.github.com/orgs/Netflix/repos\";\n  async function getAllRepos() {\n    axios.get(`${url}`).then(res => {\n      // console.log(res);\n      const allRepos = res.data;\n      // console.log(allRepos);\n      setRepos(allRepos);\n    }).catch(error => console.error(`Error: ${error}`));\n  }\n  useEffect(() => {\n    getAllRepos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App w-100 min-vh-100 justify-content-center align-items-center d-flex\",\n      children: repos.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: repos.map(repo => {\n          console.log(repo.name);\n          /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"repo.name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"MjoYu6hBopKic+0fWGhxckzxf9A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Repos","axios","Button","Card","App","repos","setRepos","url","getAllRepos","get","then","res","allRepos","data","catch","error","console","length","map","repo","log","name"],"sources":["/Users/chitoxl777/Desktop/Github-Search/github-test/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Repos from \"./Repos\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction App() {\n  const [repos, setRepos] = useState([]);\n\n  const url = \"https://api.github.com/orgs/Netflix/repos\";\n\n  async function getAllRepos() {\n    axios\n      .get(`${url}`)\n      .then((res) => {\n        // console.log(res);\n        const allRepos = res.data;\n        // console.log(allRepos);\n        setRepos(allRepos);\n      })\n      .catch((error) => console.error(`Error: ${error}`));\n  }\n\n  useEffect(() => {\n    getAllRepos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"App w-100 min-vh-100 justify-content-center align-items-center d-flex\">\n        {/* {repos?.map((repo) => {\n          console.log(repo.name);\n          <Card style={{ width: \"18rem\" }}>\n            <Card.Img variant=\"top\" src=\"img/logo192.png\" />\n            <Card.Body>\n              <Card.Title key={repo.id}>{repo.name}</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text>\n              <Button variant=\"primary\">Go somewhere</Button>\n            </Card.Body>\n          </Card>;\n        })} */}\n        {repos.length ? (\n          <>\n            {repos.map((repo) => {\n              console.log(repo.name);\n              <h1>repo.name</h1>;\n            })}\n          </>\n        ) : (\n          <div>Loading....</div>\n        )}\n        {/* {JSON.stringify(repos)} */}\n      </div>\n      {/* <div className=\"section\">\n        <Repos repos={repos} />\n      </div> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC;AAAA;AAExC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,GAAG,GAAG,2CAA2C;EAEvD,eAAeC,WAAW,GAAG;IAC3BP,KAAK,CACFQ,GAAG,CAAE,GAAEF,GAAI,EAAC,CAAC,CACbG,IAAI,CAAEC,GAAG,IAAK;MACb;MACA,MAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAI;MACzB;MACAP,QAAQ,CAACM,QAAQ,CAAC;IACpB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAE,UAASA,KAAM,EAAC,CAAC,CAAC;EACvD;EAEAjB,SAAS,CAAC,MAAM;IACdU,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,uEAAuE;MAAA,UAenFH,KAAK,CAACY,MAAM,gBACX;QAAA,UACGZ,KAAK,CAACa,GAAG,CAAEC,IAAI,IAAK;UACnBH,OAAO,CAACI,GAAG,CAACD,IAAI,CAACE,IAAI,CAAC;UACtB;YAAA,UAAI;UAAS;YAAA;YAAA;YAAA;UAAA,QAAK;QACpB,CAAC;MAAC,iBACD,gBAEH;QAAA,UAAK;MAAW;QAAA;QAAA;QAAA;MAAA;IACjB;MAAA;MAAA;MAAA;IAAA;EAEG,iBAIL;AAEP;AAAC,GAvDQjB,GAAG;AAAA,KAAHA,GAAG;AAyDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}